using Microsoft.EntityFrameworkCore;
using Microsoft.AspNetCore.Authentication.Cookies;
using test.Services;
using test.Models;



var builder = WebApplication.CreateBuilder(args);



// Add services to the container.
builder.Services.AddControllersWithViews();

// üëá –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É —Å–µ—Å—Å–∏–π
builder.Services.AddSession();

builder.Services.AddRazorPages();  // –≠—Ç–æ –¥–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫—É Razor Pages

builder.Services.AddControllers();

builder.Services.AddScoped<IUserService, UserService>();
builder.Services.AddScoped<IAccountService, AccountService>();
builder.Services.AddScoped<IHomeService, HomeService>();

// –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É —Å–µ—Å—Å–∏–π
builder.Services.AddSession(options =>
{
    options.IdleTimeout = TimeSpan.FromMinutes(30); // –í—Ä–µ–º—è –∂–∏–∑–Ω–∏ —Å–µ—Å—Å–∏–∏
    options.Cookie.HttpOnly = true;  // –î–æ—Å—Ç—É–ø –∫ cookies —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ HTTP
    options.Cookie.IsEssential = true; // Cookies –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã
});


builder.Services.AddDbContext<AppDbContext>(options =>
    options.UseSqlite("Data Source=F:\\SQLite Databases/ProjectDb.sqlite"));

builder.Services.AddAuthentication(CookieAuthenticationDefaults.AuthenticationScheme)
    .AddCookie(options =>
    {
        options.LoginPath = "/Login";
    });


var app = builder.Build();




// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Ç–∞–±–ª–∏—Ü—É –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
using (var scope = app.Services.CreateScope())
{
    var dbContext = scope.ServiceProvider.GetRequiredService<AppDbContext>();
    dbContext.Database.Migrate();

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü—É users
    if (!dbContext.Users.Any()) // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    {
        dbContext.Users.AddRange(
            new User { FirstName = "Alice", SecondName = "Johnson", Password = "password123", Role = "user" },
            new User { FirstName = "Bob", SecondName = "Smith", Password = "qwerty456", Role = "admin" },
            new User { FirstName = "Charlie", SecondName = "Brown", Password = "abcDEF789", Role ="user" }
        );
        dbContext.SaveChanges(); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    }
}




// Configure the HTTP request pipeline.
if (!app.Environment.IsDevelopment())
{
    app.UseExceptionHandler("/Home/Error");
    // The default HSTS value is 30 days. You may want to change this for production scenarios, see https://aka.ms/aspnetcore-hsts.
    app.UseHsts();
}

app.MapRazorPages();  // –ß—Ç–æ–±—ã Razor Pages —Ä–∞–±–æ—Ç–∞–ª–∏

app.UseHttpsRedirection();
app.UseRouting();



app.MapStaticAssets();

app.MapControllerRoute(
    name: "default",
    pattern: "{controller=Home}/{action=Index}/{id?}")
    .WithStaticAssets();

//controller functions  :



// –ü–æ–¥–∫–ª—é—á–∞–µ–º –º–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤
app.MapControllers();  // –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç API-–º–µ—Ç–æ–¥–∞–º –∏–∑ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤ —Ä–∞–±–æ—Ç–∞—Ç—å

app.UseSession(); // üëà –í–∞–∂–Ω–æ: –¥–æ UseAuthorization


// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
app.UseAuthentication();
app.UseAuthorization();


// –ú–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è Razor Pages
app.MapRazorPages();

builder.Services.AddSession();
app.UseSession();

app.Run();
